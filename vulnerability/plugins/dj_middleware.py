from analyzer.plugin_loader import call_with
from vulnerability.vulnerability import Vulnerability, VulnerabilityType, VulnerabilityLevel


djsecmidw = VulnerabilityType("django.middleware.security.SecurityMiddleware is missing. It adds several security "
                                      "measures to the request/response cycle and not be omitted.\n    More information: "
                                      "https://www.kite.com/python/docs/django.middleware.security.SecurityMiddleware",
                                      "Add django.middleware.security.SecurityMiddleware to MIDDLEWARE in settings.py",
                                      VulnerabilityLevel.moderate)


djcsrfmidw = VulnerabilityType("django.middleware.csrf.CsrfViewMiddleware is missing. It blocks cross-site request "
                                       "forgery. More information: https://docs.djangoproject.com/en/2.2/ref/csrf/",
                                       "Add django.middleware.csrf.CsrfViewMiddleware to MIDDLEWARE in settings.py",
                                       VulnerabilityLevel.moderate)


@call_with("Module")
def djmidw_check_module(self, node):
    if self.file.endswith("settings.py"):
        self.django_security_found = self.django_csrf_found = False
        self.generic_visit(node)
        if not self.django_security_found:
            self.vulnerabilities.add(Vulnerability(file=self.file, vuln_type=djsecmidw))
        if not self.django_csrf_found:
            self.vulnerabilities.add(Vulnerability(file=self.file, vuln_type=djcsrfmidw))
        del self.django_security_found
        del self.django_csrf_found


@call_with("Assign")
def find_djmidw(self, node):
    if self.file.endswith("settings.py"):
        for target in node.targets:
            if target.id == "MIDDLEWARE":
                for constant in node.value.elts:
                    if constant.value == "django.middleware.security.SecurityMiddleware":
                        self.django_security_found = True
                    if constant.value == "django.middleware.csrf.CsrfViewMiddleware":
                        self.django_csrf_found = True