from .vulnerability import VulnerabilityType, VulnerabilityLevel

"""
This file configures which vulnerability types python_guard_dog scans for. To add a new type define it in this file and
implement the check in analyzer.py, or in settings_analyzer.py if the vulnerability type relates to the settings.py file
of the project to be scanned. 
"""
#region Django-specific vulnerabilities
djdebug = VulnerabilityType("Debug mode turned on. Very dangerous to run in production as the app may output "
                                "internal details, which can be used by attackers.\n    More information: "
                                "https://docs.djangoproject.com/en/3.1/ref/settings/#debug",
                                "Set DEBUG to False in settings.py", VulnerabilityLevel.high)
djsecmidw = VulnerabilityType("django.middleware.security.SecurityMiddleware is missing. It adds several security "
                                  "measures to the request/response cycle and not be omitted.\n    More information: "
                                  "https://www.kite.com/python/docs/django.middleware.security.SecurityMiddleware",
                                  "Add django.middleware.security.SecurityMiddleware to MIDDLEWARE in settings.py",
                                  VulnerabilityLevel.moderate)
djcsrfmidw = VulnerabilityType("django.middleware.csrf.CsrfViewMiddleware is missing. It blocks cross-site request "
                                   "forgery. More information: https://docs.djangoproject.com/en/2.2/ref/csrf/",
                                   "Add django.middleware.csrf.CsrfViewMiddleware to MIDDLEWARE in settings.py",
                                   VulnerabilityLevel.moderate)
#endregion

#region general vulnerabilities
sqlstrformat = VulnerabilityType("Possible SQL Injection scenario. A string formatting method is used on a "
                                 "string starting with one of the following SQL commands:\n    'INSERT INTO', "
                                 "'DELETE FROM', 'ALTER TABLE', 'DROP DATABASE', 'CREATE DATABASE' or containing '"
                                 "... SELECT ... FROM ...' or '... UPDATE ... SET ...'.\n    More Information: "
                                 "https://realpython.com/prevent-python-sql-injection/",
                                 "Make sure to sanitize input by escaping and input validation",
                                 VulnerabilityLevel.high)
xssstrformat = VulnerabilityType("Possible Cross-Site Request / HTML Injection scenario. A string formatting method is "
                                 "used on a string containing HTML. More Information:\n    "
                                 "https://docs.djangoproject.com/en/3.1/ref/utils/#django.utils.html.format_html",
                                 "Use django.utils.html.format_html() for formatting HTML strings.",
                                 VulnerabilityLevel.moderate)
#endregion
